services:
    rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
            - 5672:5672
            - 15672:15672
    postgres:
        image: postgres
        environment:
            - POSTGRES_PASSWORD=postgrespw
        ports:
            - 5432:5432
        volumes:
            - pgdata:/var/lib/postgresql/data
    mongodb:
        image: mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=mongopw
        ports:
            - 27017:27017
        volumes:
            - mgdata:/var/lib/mongodb/data
    auction-service:
        build:
            context: .
            dockerfile: src/AuctionService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
            - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auctions
            - IdentityServiceUrl=http://identity-service
        ports:
            - 7001:80
        depends_on:
            - rabbitmq
            - postgres
    search-service:
        build:
            context: .
            dockerfile: src/SearchService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
            - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
            - AuctionServiceUrl=http://auction-service
        ports:
            - 7002:80
        depends_on:
            - rabbitmq
            - mongodb
    identity-service:
        build:
            context: .
            dockerfile: src/IdentityService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80-
            - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
        ports:
            - 5002:80
        depends_on:
            - postgres
    gateway-service:
        build:
            context: .
            dockerfile: src/GatewayService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
        ports:
            - 6001:80
volumes:
    pgdata:
    mgdata:
